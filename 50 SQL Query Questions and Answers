--50 SQL Query Questions and Answers
-- Create the table
CREATE TABLE Worker (
    WORKER_ID INT,
    FIRST_NAME TEXT,
    LAST_NAME TEXT,
    SALARY INT,
    JOINING_DATE DATETIME,
    DEPARTMENT TEXT
);

-- Insert sample data
INSERT INTO Worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT)
VALUES
    (001, 'Monika', 'Arora', 100000, '2014-02-20 09:00:00', 'HR'),
    (002, 'Niharika', 'Verma', 80000, '2014-06-11 09:00:00', 'Admin'),
    (003, 'Vishal', 'Singhal', 300000, '2014-02-20 09:00:00', 'HR'),
    (004, 'Amitabh', 'Singh', 500000, '2014-02-20 09:00:00', 'Admin'),
    (005, 'Vivek', 'Bhati', 500000, '2014-06-11 09:00:00', 'Admin'),
    (006, 'Vipul', 'Diwan', 200000, '2014-06-11 09:00:00', 'Account'),
    (007, 'Satish', 'Kumar', 75000, '2014-01-20 09:00:00', 'Account'),
    (008, 'Geetika', 'Chauhan', 90000, '2014-04-11 09:00:00', 'Admin');
    
-- Create the table
CREATE TABLE Bonus (
    WORKER_REF_ID INT,
    BONUS_DATE DATETIME,
    BONUS_AMOUNT INT
);

-- Insert sample data
INSERT INTO Bonus (WORKER_REF_ID, BONUS_DATE, BONUS_AMOUNT)
VALUES
    (1, '2016-02-20 00:00:00', 5000),
    (2, '2016-06-11 00:00:00', 3000),
    (3, '2016-02-20 00:00:00', 4000),
    (1, '2016-02-20 00:00:00', 4500),
    (2, '2016-06-11 00:00:00', 3500);

-- Create the table
CREATE TABLE Title (
    WORKER_REF_ID INT,
    WORKER_TITLE TEXT,
    AFFECTED_FROM DATETIME
);

-- Insert sample data
INSERT INTO Title (WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM)
VALUES
    (1, 'Manager', '2016-02-20 00:00:00'),
    (2, 'Executive', '2016-06-11 00:00:00'),
    (8, 'Executive', '2016-06-11 00:00:00'),
    (5, 'Manager', '2016-06-11 00:00:00'),
    (4, 'Asst. Manager', '2016-06-11 00:00:00'),
    (7, 'Executive', '2016-06-11 00:00:00'),
    (6, 'Lead', '2016-06-11 00:00:00'),
    (3, 'Lead', '2016-06-11 00:00:00');
    
 --Q-1. Write an SQL query to fetch “FIRST_NAME” from the Worker table using the alias name <WORKER_NAME>. 
SELECT FIRST_NAME AS WORKER_NAME
FROM Worker;

--Q-2. Write an SQL query to fetch “FIRST_NAME” from the Worker table in upper case.
SELECT UPPER(FIRST_NAME) AS FIRST_NAME_UPPER
FROM Worker;

--Q-3. Write an SQL query to fetch unique values of DEPARTMENT from the Worker table.
SELECT DISTINCT DEPARTMENT
FROM Worker;

--Q-4. Write an SQL query to print the first three characters of  FIRST_NAME from the Worker table.
SELECT SUBSTR(FIRST_NAME, 1, 3) AS FIRST_THREE
FROM Worker;

--Q-5. Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from the Worker table.
SELECT INSTR(FIRST_NAME, 'a') AS POSITION
FROM Worker
WHERE FIRST_NAME = 'Amitabh';

--Q-6. Write an SQL query to print the FIRST_NAME from the Worker table after removing white spaces from the right side.
SELECT RTRIM(FIRST_NAME) AS FIRST_NAME_TRIMMED
FROM Worker;

--Q-7. Write an SQL query to print the DEPARTMENT from the Worker table after removing white spaces from the left side.
SELECT LTRIM(DEPARTMENT) AS DEPARTMENT_TRIMMED
FROM Worker;

--Q-8. Write an SQL query that fetches the unique values of DEPARTMENT from the Worker table and prints its length.
SELECT DISTINCT DEPARTMENT, LENGTH(DEPARTMENT) AS DEPARTMENT_LENGTH
FROM Worker;

--Q-9. Write an SQL query to print the FIRST_NAME from the Worker table after replacing ‘a’ with ‘A’.
SELECT REPLACE(FIRST_NAME, 'a', 'A') 
FROM Worker;

--Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME from the Worker table into a single column COMPLETE_NAME. A space char should separate them.
SELECT FIRST_NAME || ' ' || LAST_NAME AS COMPLETE_NAME
FROM Worker;

--Q-11. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.
SELECT *
FROM Worker
ORDER BY FIRST_NAME ASC;

--Q-12. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
SELECT *
FROM Worker
ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

--Q-13. Write an SQL query to print details for Workers with the first names “Vipul” and “Satish” from the Worker table.
SELECT *
FROM Worker
WHERE FIRST_NAME IN ('Vipul','Satish');

--Q-14. Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from the Worker table.
SELECT *
FROM Worker
WHERE FIRST_NAME NOT IN ('Vipul','Satish');

--Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin”.
SELECT *
FROM Worker
WHERE DEPARTMENT= 'Admin';

--Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.
SELECT *
FROM Worker
WHERE FIRST_NAME LIKE'a%';

--Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
SELECT *
FROM Worker
WHERE FIRST_NAME LIKE'%a';

--Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
SELECT *
FROM Worker
WHERE FIRST_NAME LIKE'_____h';

--Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.
SELECT *
FROM Worker
WHERE SALARY BETWEEN 100000 AND 500000;

--Q-20. Write an SQL query to print details of the Workers who joined in Feb’2014.
SELECT * 
FROM Worker
WHERE JOINING_DATE >= '2014-02-01' AND JOINING_DATE < '2014-03-01';

SELECT * 
FROM Worker
WHERE strftime('%Y-%m', JOINING_DATE) = '2014-02';

--Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.
SELECT COUNT(*)
FROM Worker
WHERE DEPARTMENT='Admin';

--Q-22. Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000.
SELECT FIRST_NAME || ' ' || LAST_NAME AS WORKER_NAME, SALARY
FROM Worker
WHERE WORKER_ID IN
 (SELECT WORKER_ID
 FROM WORKER
 WHERE SALARY BETWEEN 50000 AND 100000);
 
--Q-23. Write an SQL query to fetch the no. of workers for each department in descending order.
SELECT DEPARTMENT, COUNT(WORKER_ID)NO_OF_WORKERS
FROM Worker
GROUP BY DEPARTMENT 
ORDER BY NO_OF_WORKERS DESC;

--Q-24. Write an SQL query to print details of the Workers who are also Managers.
SELECT DISTINCT W.FIRST_NAME, T.WORKER_TITLE
FROM Worker W
INNER JOIN Title T
ON W.WORKER_ID = T.WORKER_REF_ID
AND T.WORKER_TITLE in ('Manager');

--Q-25. Write an SQL query to fetch duplicate records having matching data in some fields of a table.
SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*)
FROM Title
GROUP BY WORKER_TITLE, AFFECTED_FROM 
HAVING COUNT(*) >1;

--Q-26. Write an SQL query to show only odd rows from a table.
SELECT *
FROM Worker
WHERE MOD (WORKER_ID,2) <>0;

--Q-27. Write an SQL query to show only even rows from a table.
SELECT *
FROM Worker
WHERE MOD (WORKER_ID,2) =0;

--Q-28. Write an SQL query to clone a new table from another table
CREATE TABLE new_table AS
SELECT *
FROM Worker;

--Q-29. Write an SQL query to fetch intersecting records of two tables.
SELECT FIRST_NAME
FROM Worker
INTERSECT
SELECT AFFECTED_FROM
FROM Title;

--Q-30. Write an SQL query to show records from one table that another table does not have.

--Q-31. Write an SQL query to show the current date and time.
SELECT DATETIME('Now');

--Q-32. Write an SQL query to show the top n (say 10) records of a table.
SELECT *
FROM Worker
LIMIT 5;

--Q-33. Write an SQL query to determine the nth (say n=5) highest salary from a table.
SELECT SALARY
FROM Worker
WHERE SALARY =500000;

--Q-34. Write an SQL query to determine the 5th highest salary without using the TOP or limit method.
SELECT DISTINCT Salary
FROM Worker w1
WHERE 5 = (
  SELECT COUNT(DISTINCT Salary)
  FROM Worker w2
  WHERE w2.Salary >= w1.Salary
  );

--Q-35. Write an SQL query to fetch the list of employees with the same salary.
SELECT DISTINCT w.WORKER_ID, w.FIRST_NAME, w.SALARY
FROM Worker w, Worker W1
WHERE w.SALARY = w1.SALARY
AND w.WORKER_ID != w1.WORKER_ID;

--Q-36. Write an SQL query to show the second-highest salary from a table.
Select max(Salary)
from Worker 
where Salary not in (
 Select max(Salary)
 from Worker
 );
 
--Q-37. Write an SQL query to show one row twice in the results from a table.
SELECT FIRST_NAME, DEPARTMENT
FROM Worker w
WHERE w.DEPARTMENT='HR'
UNION ALL
SELECT FIRST_NAME, DEPARTMENT
FROM WORKER w1
WHERE w1.DEPARTMENT='HR';

--Q-38. Write an SQL query to fetch intersecting records of two tables.
SELECT * FROM Worker
INTERSECT
SELECT * FROM WorkerClone;

--Q-39. Write an SQL query to fetch the first 50% of records from a table.
SELECT *
FROM Worker
WHERE WORKER_ID <=(
 SELECT COUNT(WORKER_ID) / 2 
 FROM Worker
 );

--Q-40. Write an SQL query to fetch the departments that have less than five people in them.
SELECT DEPARTMENT, COUNT(WORKER_ID)AS'Number of Workers'
FROM Worker
GROUP BY DEPARTMENT
HAVING COUNT(WORKER_ID) < 5;

--Q-41. Write an SQL query to show all departments along with the number of people in there.
SELECT DEPARTMENT, COUNT(WORKER_ID)AS'Number of Worker'
FROM Worker
GROUP BY DEPARTMENT;

--Q-42. Write an SQL query to show the last record from a table.
SELECT *
FROM Worker
ORDER BY WORKER_ID DESC
LIMIT 1;

--Q-43. Write an SQL query to fetch the first row of a table.
SELECT *
FROM Worker
WHERE WORKER_ID
LIMIT 1;

Select * 
from Worker 
where WORKER_ID = (
SELECT min(WORKER_ID) 
from Worker
);

--Q-44. Write an SQL query to fetch the last five records from a table.
SELECT *
FROM Worker
ORDER BY WORKER_ID DESC
LIMIT 5;

--Q-45. Write an SQL query to print the name of employees having the highest salary in each department.
SELECT w.DEPARTMENT, w.FIRST_NAME, w.SALARY
FROM (
 SELECT MAX(SALARY) AS TotalSalary, DEPARTMENT
 FROM Worker
 GROUP BY DEPARTMENT) AS NewTemp
INNER JOIN Worker w
ON NewTemp.DEPARTMENT = w.DEPARTMENT
AND NewTemp.TotalSalary = w.SALARY;

--Q-46. Write an SQL query to fetch three max salaries from a table.
SELECT DISTINCT(SALARY)
FROM Worker
ORDER BY SALARY DESC
LIMIT 3;

SELECT DISTINCT(SALARY)
FROM Worker a
WHERE 3 >= (
 SELECT COUNT(DISTINCT SALARY)
 FROM Worker b
 WHERE a.SALARY <= b.SALARY
 )
 ORDER BY a.SALARY DESC;

--Q-47. Write an SQL query to fetch three min salaries from a table.
SELECT DISTINCT(SALARY)
FROM Worker
ORDER BY SALARY ASC
LIMIT 3;

SELECT DISTINCT(SALARY)
FROM Worker w
WHERE 3 >= (
 SELECT COUNT(DISTINCT SALARY)
 FROM Worker w1
 WHERE w.SALARY >= w1.SALARY
 ) 
ORDER BY w.SALARY DESC;

--Q-48. Write an SQL query to fetch nth max salaries from a table.
SELECT SALARY
FROM Worker
ORDER BY SALARY DESC
LIMIT 1;

--Q-49. Write an SQL query to fetch departments along with the total salaries paid for each of them.
SELECT DEPARTMENT, SUM(SALARY)
FROM Worker
GROUP BY DEPARTMENT;


--Q-50. Write an SQL query to fetch the names of workers who earn the highest salary.
SELECT FIRST_NAME, SALARY
FROM Worker
WHERE SALARY =(
 SELECT MAX(SALARY)
 FROM Worker
 )